// Generated by gencpp from file rm_msgs/IcraBuffDebuffZoneStatus.msg
// DO NOT EDIT!


#ifndef RM_MSGS_MESSAGE_ICRABUFFDEBUFFZONESTATUS_H
#define RM_MSGS_MESSAGE_ICRABUFFDEBUFFZONESTATUS_H


#include <string>
#include <vector>
#include <memory>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace rm_msgs
{
template <class ContainerAllocator>
struct IcraBuffDebuffZoneStatus_
{
  typedef IcraBuffDebuffZoneStatus_<ContainerAllocator> Type;

  IcraBuffDebuffZoneStatus_()
    : f_1_zone_status(0)
    , f_1_zone_buff_debuff_status(0)
    , f_2_zone_status(0)
    , f_2_zone_buff_debuff_status(0)
    , f_3_zone_status(0)
    , f_3_zone_buff_debuff_status(0)
    , f_4_zone_status(0)
    , f_4_zone_buff_debuff_status(0)
    , f_5_zone_status(0)
    , f_5_zone_buff_debuff_status(0)
    , f_6_zone_status(0)
    , f_6_zone_buff_debuff_status(0)
    , red_1_bullet_left(0)
    , red_2_bullet_left(0)
    , blue_1_bullet_left(0)
    , blue_2_bullet_left(0)
    , stamp()  {
    }
  IcraBuffDebuffZoneStatus_(const ContainerAllocator& _alloc)
    : f_1_zone_status(0)
    , f_1_zone_buff_debuff_status(0)
    , f_2_zone_status(0)
    , f_2_zone_buff_debuff_status(0)
    , f_3_zone_status(0)
    , f_3_zone_buff_debuff_status(0)
    , f_4_zone_status(0)
    , f_4_zone_buff_debuff_status(0)
    , f_5_zone_status(0)
    , f_5_zone_buff_debuff_status(0)
    , f_6_zone_status(0)
    , f_6_zone_buff_debuff_status(0)
    , red_1_bullet_left(0)
    , red_2_bullet_left(0)
    , blue_1_bullet_left(0)
    , blue_2_bullet_left(0)
    , stamp()  {
  (void)_alloc;
    }



   typedef uint8_t _f_1_zone_status_type;
  _f_1_zone_status_type f_1_zone_status;

   typedef uint8_t _f_1_zone_buff_debuff_status_type;
  _f_1_zone_buff_debuff_status_type f_1_zone_buff_debuff_status;

   typedef uint8_t _f_2_zone_status_type;
  _f_2_zone_status_type f_2_zone_status;

   typedef uint8_t _f_2_zone_buff_debuff_status_type;
  _f_2_zone_buff_debuff_status_type f_2_zone_buff_debuff_status;

   typedef uint8_t _f_3_zone_status_type;
  _f_3_zone_status_type f_3_zone_status;

   typedef uint8_t _f_3_zone_buff_debuff_status_type;
  _f_3_zone_buff_debuff_status_type f_3_zone_buff_debuff_status;

   typedef uint8_t _f_4_zone_status_type;
  _f_4_zone_status_type f_4_zone_status;

   typedef uint8_t _f_4_zone_buff_debuff_status_type;
  _f_4_zone_buff_debuff_status_type f_4_zone_buff_debuff_status;

   typedef uint8_t _f_5_zone_status_type;
  _f_5_zone_status_type f_5_zone_status;

   typedef uint8_t _f_5_zone_buff_debuff_status_type;
  _f_5_zone_buff_debuff_status_type f_5_zone_buff_debuff_status;

   typedef uint8_t _f_6_zone_status_type;
  _f_6_zone_status_type f_6_zone_status;

   typedef uint8_t _f_6_zone_buff_debuff_status_type;
  _f_6_zone_buff_debuff_status_type f_6_zone_buff_debuff_status;

   typedef uint16_t _red_1_bullet_left_type;
  _red_1_bullet_left_type red_1_bullet_left;

   typedef uint16_t _red_2_bullet_left_type;
  _red_2_bullet_left_type red_2_bullet_left;

   typedef uint16_t _blue_1_bullet_left_type;
  _blue_1_bullet_left_type blue_1_bullet_left;

   typedef uint16_t _blue_2_bullet_left_type;
  _blue_2_bullet_left_type blue_2_bullet_left;

   typedef ros::Time _stamp_type;
  _stamp_type stamp;





  typedef boost::shared_ptr< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> const> ConstPtr;

}; // struct IcraBuffDebuffZoneStatus_

typedef ::rm_msgs::IcraBuffDebuffZoneStatus_<std::allocator<void> > IcraBuffDebuffZoneStatus;

typedef boost::shared_ptr< ::rm_msgs::IcraBuffDebuffZoneStatus > IcraBuffDebuffZoneStatusPtr;
typedef boost::shared_ptr< ::rm_msgs::IcraBuffDebuffZoneStatus const> IcraBuffDebuffZoneStatusConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator1> & lhs, const ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator2> & rhs)
{
  return lhs.f_1_zone_status == rhs.f_1_zone_status &&
    lhs.f_1_zone_buff_debuff_status == rhs.f_1_zone_buff_debuff_status &&
    lhs.f_2_zone_status == rhs.f_2_zone_status &&
    lhs.f_2_zone_buff_debuff_status == rhs.f_2_zone_buff_debuff_status &&
    lhs.f_3_zone_status == rhs.f_3_zone_status &&
    lhs.f_3_zone_buff_debuff_status == rhs.f_3_zone_buff_debuff_status &&
    lhs.f_4_zone_status == rhs.f_4_zone_status &&
    lhs.f_4_zone_buff_debuff_status == rhs.f_4_zone_buff_debuff_status &&
    lhs.f_5_zone_status == rhs.f_5_zone_status &&
    lhs.f_5_zone_buff_debuff_status == rhs.f_5_zone_buff_debuff_status &&
    lhs.f_6_zone_status == rhs.f_6_zone_status &&
    lhs.f_6_zone_buff_debuff_status == rhs.f_6_zone_buff_debuff_status &&
    lhs.red_1_bullet_left == rhs.red_1_bullet_left &&
    lhs.red_2_bullet_left == rhs.red_2_bullet_left &&
    lhs.blue_1_bullet_left == rhs.blue_1_bullet_left &&
    lhs.blue_2_bullet_left == rhs.blue_2_bullet_left &&
    lhs.stamp == rhs.stamp;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator1> & lhs, const ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace rm_msgs

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsMessage< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "2f6fc310c2ebda62f2d87ce47e0d1eb0";
  }

  static const char* value(const ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x2f6fc310c2ebda62ULL;
  static const uint64_t static_value2 = 0xf2d87ce47e0d1eb0ULL;
};

template<class ContainerAllocator>
struct DataType< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "rm_msgs/IcraBuffDebuffZoneStatus";
  }

  static const char* value(const ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint8 f_1_zone_status\n"
"uint8 f_1_zone_buff_debuff_status\n"
"uint8 f_2_zone_status\n"
"uint8 f_2_zone_buff_debuff_status\n"
"uint8 f_3_zone_status\n"
"uint8 f_3_zone_buff_debuff_status\n"
"uint8 f_4_zone_status\n"
"uint8 f_4_zone_buff_debuff_status\n"
"uint8 f_5_zone_status\n"
"uint8 f_5_zone_buff_debuff_status\n"
"uint8 f_6_zone_status\n"
"uint8 f_6_zone_buff_debuff_status\n"
"uint16 red_1_bullet_left\n"
"uint16 red_2_bullet_left\n"
"uint16 blue_1_bullet_left\n"
"uint16 blue_2_bullet_left\n"
"\n"
"time stamp\n"
;
  }

  static const char* value(const ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.f_1_zone_status);
      stream.next(m.f_1_zone_buff_debuff_status);
      stream.next(m.f_2_zone_status);
      stream.next(m.f_2_zone_buff_debuff_status);
      stream.next(m.f_3_zone_status);
      stream.next(m.f_3_zone_buff_debuff_status);
      stream.next(m.f_4_zone_status);
      stream.next(m.f_4_zone_buff_debuff_status);
      stream.next(m.f_5_zone_status);
      stream.next(m.f_5_zone_buff_debuff_status);
      stream.next(m.f_6_zone_status);
      stream.next(m.f_6_zone_buff_debuff_status);
      stream.next(m.red_1_bullet_left);
      stream.next(m.red_2_bullet_left);
      stream.next(m.blue_1_bullet_left);
      stream.next(m.blue_2_bullet_left);
      stream.next(m.stamp);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct IcraBuffDebuffZoneStatus_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::rm_msgs::IcraBuffDebuffZoneStatus_<ContainerAllocator>& v)
  {
    s << indent << "f_1_zone_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_1_zone_status);
    s << indent << "f_1_zone_buff_debuff_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_1_zone_buff_debuff_status);
    s << indent << "f_2_zone_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_2_zone_status);
    s << indent << "f_2_zone_buff_debuff_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_2_zone_buff_debuff_status);
    s << indent << "f_3_zone_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_3_zone_status);
    s << indent << "f_3_zone_buff_debuff_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_3_zone_buff_debuff_status);
    s << indent << "f_4_zone_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_4_zone_status);
    s << indent << "f_4_zone_buff_debuff_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_4_zone_buff_debuff_status);
    s << indent << "f_5_zone_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_5_zone_status);
    s << indent << "f_5_zone_buff_debuff_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_5_zone_buff_debuff_status);
    s << indent << "f_6_zone_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_6_zone_status);
    s << indent << "f_6_zone_buff_debuff_status: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.f_6_zone_buff_debuff_status);
    s << indent << "red_1_bullet_left: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.red_1_bullet_left);
    s << indent << "red_2_bullet_left: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.red_2_bullet_left);
    s << indent << "blue_1_bullet_left: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.blue_1_bullet_left);
    s << indent << "blue_2_bullet_left: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.blue_2_bullet_left);
    s << indent << "stamp: ";
    Printer<ros::Time>::stream(s, indent + "  ", v.stamp);
  }
};

} // namespace message_operations
} // namespace ros

#endif // RM_MSGS_MESSAGE_ICRABUFFDEBUFFZONESTATUS_H
